apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.23.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: zookeeper
  name: zookeeper
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: zookeeper
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.23.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: zookeeper
    spec:
      containers:
        - env:
            - name: ZOOKEEPER_CLIENT_PORT
              value: "2181"
            - name: ZOOKEEPER_TICK_TIME
              value: "2000"
          image: confluentinc/cp-zookeeper:latest
          name: zookeeper
          ports:
            - containerPort: 2181
          resources: {}
      hostname: zookeeper
      restartPolicy: Always
status: {}

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.23.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: zookeeper
  name: zookeeper
spec:
  ports:
    - name: "2181"
      port: 2181
      targetPort: 2181
  selector:
    io.kompose.service: zookeeper
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.23.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: broker
  name: broker
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: broker
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.23.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: broker
    spec:
      containers:
        - env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: PLAINTEXT://broker.dvrc.svc.cluster.local:29092
            - name: KAFKA_BROKER_ID
              value: "1"
            - name: KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS
              value: "0"
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: PLAINTEXT
            - name: KAFKA_LISTENERS
              value: PLAINTEXT://0.0.0.0:29092
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
            - name: KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR
              value: "1"
            - name: KAFKA_TOOLS_LOG4J_LOGLEVEL
              value: ERROR
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper.dvrc.svc.cluster.local:2181
          image: confluentinc/cp-kafka:latest
          name: broker
          ports:
            - containerPort: 29092
          resources: {}
      hostname: broker
      restartPolicy: Always
status: {}

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.23.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: broker
  name: broker
spec:
  ports:
    - name: "29092"
      port: 29092
      targetPort: 29092
  selector:
    io.kompose.service: broker
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.23.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: schemaregistry
  name: schemaregistry
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: schemaregistry
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.23.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: schemaregistry
    spec:
      containers:
        - env:
            - name: SCHEMA_REGISTRY_HOST_NAME
              value: schemaregistry.dvrc.svc.cluster.local
            - name: SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL
              value: zookeeper.dvrc.svc.cluster.local:2181
            - name: SCHEMA_REGISTRY_LOG4J_ROOT_LOGLEVEL
              value: WARN
          image: confluentinc/cp-schema-registry:latest
          name: schemaregistry
          ports:
            - containerPort: 8081
          resources: {}
      hostname: schemaregistry
      restartPolicy: Always
status: {}

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.23.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: schemaregistry
  name: schemaregistry
spec:
  ports:
    - name: "8081"
      port: 8081
      targetPort: 8081
  selector:
    io.kompose.service: schemaregistry
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.23.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: mongodb
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongodb
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.23.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: mongodb
    spec:
      containers:
        - env:
            - name: MONGO_INITDB_ROOT_PASSWORD
              value: root
            - name: MONGO_INITDB_ROOT_USERNAME
              value: root
          image: s3.dvic.devinci.fr/clusterspeed/mongo:latest
          name: mongodb
          ports:
            - containerPort: 27017
          resources: {}
          volumeMounts:
            - mountPath: /Users/Flexiboy/Desktop/Courses/Distributed_SAT_Approach/data/db
              name: mongodb-claim0
      restartPolicy: Always
      imagePullSecrets: 
      - name: regcred
      volumes:
        - name: mongodb-claim0
          persistentVolumeClaim:
            claimName: mongodb-claim0
status: {}

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.23.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: mongodb
  name: mongodb
spec:
  ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    io.kompose.service: mongodb
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.23.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: mongoadmin
  name: mongoadmin
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongoadmin
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.23.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: mongoadmin
    spec:
      containers:
        - env:
            - name: ME_CONFIG_BASICAUTH_PASSWORD
              value: admin
            - name: ME_CONFIG_BASICAUTH_USERNAME
              value: admin
            - name: ME_CONFIG_MONGODB_ADMINPASSWORD
              value: root
            - name: ME_CONFIG_MONGODB_ADMINUSERNAME
              value: root
            - name: ME_CONFIG_MONGODB_PORT
              value: "27017"
            - name: ME_CONFIG_MONGODB_SERVER
              value: mongodb
            - name: VCAP_APP_PORT
              value: "8082"
          image: mongo-express
          name: mongoadmin
          ports:
            - containerPort: 8082
          resources: {}
      restartPolicy: Always
status: {}

---

apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.23.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: mongoadmin
  name: mongoadmin
spec:
  ports:
    - name: "8082"
      port: 8082
      targetPort: 8082
  selector:
    io.kompose.service: mongoadmin
status:
  loadBalancer: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.23.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: master
  name: master
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: master
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.23.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: master
    spec:
      containers:
        - env:
            - name: DATASET
              value: ../../../data/retail.dat
            - name: KAFKAADDR
              value: broker.dvrc.svc.cluster.local
            - name: KAFKAPORT
              value: 29092
            - name: MINSUPPORT
              value: 500
            - name: MONGOADDR
              value: mongodb
            - name: MONGOPASS
              value: root
            - name: MONGOPORT
              value: 27017
            - name: MONGOUSER
              value: root
            - name: NSOLVERS
              value: 2
            - name: RESET
              value: 0
          image: s3.dvic.devinci.fr/clusterspeed/master:latest
          name: master
          resources: {}
      imagePullSecrets: 
        - name: regcred
      restartPolicy: OnFailure
status: {}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.23.0 (HEAD)
  creationTimestamp: null
  labels:
    io.kompose.service: slave
  name: slave
spec:
  replicas: 2
  selector:
    matchLabels:
      io.kompose.service: slave
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.23.0 (HEAD)
      creationTimestamp: null
      labels:
        io.kompose.service: slave
    spec:
      containers:
        - env:
            - name: KAFKAADDR
              value: broker.dvrc.svc.cluster.local
            - name: KAFKAGROUP
              value: solvers
            - name: KAFKAOFTRST
              value: earliest
            - name: KAFKAPORT
              value: "29092"
            - name: MINSUPPORT
              value: "500"
            - name: MONGOADDR
              value: mongodb
            - name: MONGOPASS
              value: root
            - name: MONGOPORT
              value: "27017"
            - name: MONGOUSER
              value: root
            - name: NCORES
              value: "1"
          image: s3.dvic.devinci.fr/clusterspeed/slave:latest
          name: solver
          resources: {}
      imagePullSecrets:
        - name: regcred
      restartPolicy: OnFailure
status: {}
